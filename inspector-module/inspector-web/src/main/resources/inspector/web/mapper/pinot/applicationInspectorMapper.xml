<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ /*
  ~  * Copyright 2024 NAVER Corp.
  ~  *
  ~  * Licensed under the Apache License, Version 2.0 (the "License");
  ~  * you may not use this file except in compliance with the License.
  ~  * You may obtain a copy of the License at
  ~  *
  ~  * http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  * Unless required by applicable law or agreed to in writing, software
  ~  * distributed under the License is distributed on an "AS IS" BASIS,
  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  * See the License for the specific language governing permissions and
  ~  * limitations under the License.
  ~  */
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.navercorp.pinpoint.inspector.web.dao.pinot.PinotApplicationStatDao">

    <resultMap id="avgMinMaxResultMap" type="AvgMinMaxMetricPoint">
        <constructor>
            <arg column="aggregatedTime" javaType="_long"/>
            <arg column="avgValue" javaType="Number" typeHandler="DoubleHandler"/>
            <arg column="minValue" javaType="Number" typeHandler="DoubleHandler"/>
            <arg column="maxValue" javaType="Number" typeHandler="DoubleHandler"/>
        </constructor>
    </resultMap>

    <resultMap id="minMaxResultMap" type="MinMaxMetricPoint">
        <constructor>
            <arg column="aggregatedTime" javaType="_long"/>
            <arg column="minValue" javaType="Number" typeHandler="DoubleHandler"/>
            <arg column="maxValue" javaType="Number" typeHandler="DoubleHandler"/>
        </constructor>
    </resultMap>

    <resultMap id="avgMinResultMap" type="AvgMinMetricPoint">
        <constructor>
            <arg column="aggregatedTime" javaType="_long"/>
            <arg column="avgValue" javaType="Number" typeHandler="DoubleHandler"/>
            <arg column="minValue" javaType="Number" typeHandler="DoubleHandler"/>
        </constructor>
    </resultMap>

    <resultMap id="singleResultMap" type="SystemMetricPoint">
        <constructor>
            <arg column="aggregatedTime" javaType="_long"/>
            <arg column="fValue" javaType="Number" typeHandler="DoubleHandler"/>
        </constructor>
    </resultMap>

    <select id="selectInspectorAvgMinMaxData" parameterType="inspectorQueryParameter" resultMap="avgMinMaxResultMap" >
        SELECT
        AVG(fieldValue) AS avgValue,
        MIN(fieldValue) AS minValue,
        MAX(fieldValue) AS maxValue,
        DATETIME_CONVERT(eventTime, '1:MILLISECONDS:EPOCH', '1:MILLISECONDS:EPOCH', '#{timePrecision.timeSize}:${timePrecision.timeUnit}') AS aggregatedTime
        FROM inspectorStat
        WHERE
        <!--  tenantId = #{tenantId}
              AND serviceName = #{serviceName} -->
        applicationName = #{applicationName}
        AND metricName = #{metricName}
        AND fieldName = #{fieldName}
        <foreach collection="tagList" item="tag" separator=" ">
            AND tags = #{tag}
        </foreach>
        AND eventTime BETWEEN #{range.from} AND #{range.to}
        GROUP BY aggregatedTime
        ORDER BY aggregatedTime asc
        LIMIT ${limit}
    </select>

    <select id="selectInspectorMinMaxData" parameterType="inspectorQueryParameter" resultMap="minMaxResultMap" >
        SELECT
        MIN(fieldValue) AS minValue,
        MAX(fieldValue) AS maxValue,
        DATETIME_CONVERT(eventTime, '1:MILLISECONDS:EPOCH', '1:MILLISECONDS:EPOCH', '#{timePrecision.timeSize}:${timePrecision.timeUnit}') AS aggregatedTime
        FROM inspectorStat
        WHERE
        <!--  tenantId = #{tenantId}
              AND serviceName = #{serviceName} -->
        applicationName = #{applicationName}
        AND metricName = #{metricName}
        AND fieldName = #{fieldName}
        <foreach collection="tagList" item="tag" separator=" ">
            AND tags = #{tag}
        </foreach>
        AND eventTime BETWEEN #{range.from} AND #{range.to}
        GROUP BY aggregatedTime
        ORDER BY aggregatedTime asc
        LIMIT ${limit}
    </select>

    <select id="selectInspectorAvgMinData" parameterType="inspectorQueryParameter" resultMap="avgMinResultMap" >
        SELECT
        AVG(fieldValue) AS avgValue,
        MIN(fieldValue) AS minValue,
        DATETIME_CONVERT(eventTime, '1:MILLISECONDS:EPOCH', '1:MILLISECONDS:EPOCH', '#{timePrecision.timeSize}:${timePrecision.timeUnit}') AS aggregatedTime
        FROM inspectorStat
        WHERE
        <!--  tenantId = #{tenantId}
              AND serviceName = #{serviceName} -->
        applicationName = #{applicationName}
        AND metricName = #{metricName}
        AND fieldName = #{fieldName}
        <foreach collection="tagList" item="tag" separator=" ">
            AND tags = #{tag}
        </foreach>
        AND eventTime BETWEEN #{range.from} AND #{range.to}
        GROUP BY aggregatedTime
        ORDER BY aggregatedTime asc
        LIMIT ${limit}
    </select>

    <select id="selectInspectorSumData" parameterType="inspectorQueryParameter" resultMap="singleResultMap" >
        SELECT
        SUM(fieldValue) as fValue,
        DATETIME_CONVERT(eventTime, '1:MILLISECONDS:EPOCH', '1:MILLISECONDS:EPOCH', '#{timePrecision.timeSize}:${timePrecision.timeUnit}') AS aggregatedTime
        FROM inspectorStat
        WHERE
        <!--  tenantId = #{tenantId}
              AND serviceName = #{serviceName} -->
        applicationName = #{applicationName}
        AND metricName = #{metricName}
        AND fieldName = #{fieldName}
        <foreach collection="tagList" item="tag" separator=" ">
            AND tags = #{tag}
        </foreach>
        AND eventTime BETWEEN #{range.from} AND #{range.to}
        GROUP BY aggregatedTime
        ORDER BY aggregatedTime asc
        LIMIT ${limit}
    </select>

    <select id="selectInspectorMaxData" parameterType="inspectorQueryParameter" resultMap="singleResultMap" >
        SELECT
        MAX(fieldValue) as fValue,
        DATETIME_CONVERT(eventTime, '1:MILLISECONDS:EPOCH', '1:MILLISECONDS:EPOCH', '#{timePrecision.timeSize}:${timePrecision.timeUnit}') AS aggregatedTime
        FROM inspectorStat
        WHERE
        <!--  tenantId = #{tenantId}
              AND serviceName = #{serviceName} -->
        applicationName = #{applicationName}
        AND metricName = #{metricName}
        AND fieldName = #{fieldName}
        <foreach collection="tagList" item="tag" separator=" ">
            AND tags = #{tag}
        </foreach>
        AND eventTime BETWEEN #{range.from} AND #{range.to}
        GROUP BY aggregatedTime
        ORDER BY aggregatedTime asc
        LIMIT ${limit}
    </select>

</mapper>
