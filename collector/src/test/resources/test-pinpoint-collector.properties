#
# Copyright 2017 NAVER Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# configure l4 ip address to ignore health check logs
collector.l4.ip=127.0.0.1,192.168.0.1,255.255.255.255

# tcp listen ip and port
collector.receiver.base.ip=0.0.0.2
collector.receiver.base.port=39994

# number of tcp worker threads
collector.receiver.base.worker.threadSize=33
# capacity of tcp worker queue
collector.receiver.base.worker.queueSize=29
# monitoring for tcp worker
collector.receiver.base.worker.monitor=true

# stat receiver config  ---------------------------------------------------------------------
collector.receiver.stat.udp=false
collector.receiver.stat.udp.ip=0.0.0.1
collector.receiver.stat.udp.port=39995
collector.receiver.stat.udp.receiveBufferSize=419

collector.receiver.stat.tcp=true
collector.receiver.stat.tcp.ip=0.0.0.2
collector.receiver.stat.tcp.port=39996

# number of udp statworker threads
collector.receiver.stat.worker.threadSize=2
# capacity of udp statworker queue
collector.receiver.stat.worker.queueSize=3
# monitoring for udp stat worker
collector.receiver.stat.worker.monitor=true


# span receiver config  ---------------------------------------------------------------------
collector.receiver.span.udp=true
collector.receiver.span.udp.ip=0.0.0.3
collector.receiver.span.udp.port=39997
collector.receiver.span.udp.receiveBufferSize=568

collector.receiver.span.tcp=false
collector.receiver.span.tcp.ip=0.0.0.4
collector.receiver.span.tcp.port=39998

# number of udp statworker threads
collector.receiver.span.worker.threadSize=3
# capacity of udp statworker queue
collector.receiver.span.worker.queueSize=4
# monitoring for udp stat worker
collector.receiver.span.worker.monitor=false

# change OS level read/write socket buffer size (for linux)
#sudo sysctl -w net.core.rmem_max=
#sudo sysctl -w net.core.wmem_max=
# check current values using: 
#$ /sbin/sysctl -a | grep -e rmem -e wmem

# number of agent event worker threads
collector.agentEventWorker.threadSize=4
# capacity of agent event worker queue
collector.agentEventWorker.queueSize=1024

# Determines whether to register the information held by com.navercorp.pinpoint.collector.monitor.CollectorMetric to jmx
collector.metric.jmx=false
collector.metric.jmx.domain=pinpoint.collector.metrics

# -------------------------------------------------------------------------------------------------
# The cluster related options are used to establish connections between the agent, collector, and web in order to send/receive data between them in real time.
# You may enable additional features using this option (Ex : RealTime Active Thread Chart).
# -------------------------------------------------------------------------------------------------
# Usage : Set the following options for collector/web components that reside in the same cluster in order to enable this feature.
# 1. cluster.enable (pinpoint-web.properties, pinpoint-collector-root.properties) - "true" to enable
# 2. cluster.zookeeper.address (pinpoint-web.properties, pinpoint-collector-root.properties) - address of the ZooKeeper instance that will be used to manage the cluster
# 3. cluster.web.tcp.port (pinpoint-web.properties) - any available port number (used to establish connection between web and collector)
# -------------------------------------------------------------------------------------------------
# Please be aware of the following:
#1. If the network between web, collector, and the agents are not stable, it is advisable not to use this feature.
#2. We recommend using the cluster.web.tcp.port option. However, in cases where the collector is unable to establish connection to the web, you may reverse this and make the web establish connection to the collector.
#   In this case, you must set cluster.connect.address (pinpoint-web.properties); and cluster.listen.ip, cluster.listen.port (pinpoint-collector-root.properties) accordingly.
cluster.enable=false
cluster.zookeeper.address=localhost
cluster.zookeeper.znode_root=/pinpoint-cluster
cluster.zookeeper.sessiontimeout=30000
cluster.listen.ip=
cluster.listen.port=-1

#collector.admin.password=
#collector.admin.api.rest.active=
#collector.admin.api.jmx.active=

collector.spanEvent.sequence.limit=10000

# Flink configuration
flink.cluster.enable=false
flink.cluster.zookeeper.address=localhost
flink.cluster.zookeeper.znode_root=/pinpoint-cluster
flink.cluster.zookeeper.sessiontimeout=3000


# gRPC
# Agent
collector.receiver.grpc.agent.enable=false
collector.receiver.grpc.agent.bindaddress.ip=1.1.1.1
collector.receiver.grpc.agent.bindaddress.port=1
# Executor of Server
collector.receiver.grpc.agent.server.executor.thread_size=10
collector.receiver.grpc.agent.server.executor.queue_size=11
collector.receiver.grpc.agent.server.executor.monitor_enable=true
# Executor of Worker
collector.receiver.grpc.agent.worker.executor.thread_size=20
collector.receiver.grpc.agent.worker.executor.queue_size=21
collector.receiver.grpc.agent.worker.executor.monitor.enable=true
# Server Option
collector.receiver.grpc.agent.keepalive_time_millis=1
collector.receiver.grpc.agent.keepalive_timeout_millis=1
collector.receiver.grpc.agent.permit_keepalive_time_millis=1
collector.receiver.grpc.agent.connection_idle_timeout_millis=1
collector.receiver.grpc.agent.concurrent-calls_per-connection_max=1
collector.receiver.grpc.agent.handshake_timeout_millis=1
collector.receiver.grpc.agent.flow-control_window_size_init=1MB
collector.receiver.grpc.agent.header_list_size_max=1KB
collector.receiver.grpc.agent.inbound_message_size_max=1MB
collector.receiver.grpc.agent.receive_buffer_size=1MB

# Stat
collector.receiver.grpc.stat.enable=false
collector.receiver.grpc.stat.bindaddress.ip=2.2.2.2
collector.receiver.grpc.stat.bindaddress.port=2
# Executor of Server
collector.receiver.grpc.stat.server.executor.thread_size=2
collector.receiver.grpc.stat.server.executor.queue_size=2
collector.receiver.grpc.stat.server.executor.monitor_enable=false
# Executor of Worker
collector.receiver.grpc.stat.worker.executor.thread_size=2
collector.receiver.grpc.stat.worker.executor.queue_size=2
collector.receiver.grpc.stat.worker.executor.monitor_enable=false
# Stream scheduler for rejected execution
collector.receiver.grpc.stat.stream.scheduler_thread_size=2
collector.receiver.grpc.stat.stream.scheduler_period_millis=2
collector.receiver.grpc.stat.stream.call_init_request_count=2

# Server Option
collector.receiver.grpc.stat.keepalive_time_millis=2
collector.receiver.grpc.stat.keepalive_timeout_millis=2
collector.receiver.grpc.stat.permit_keepalive_time_millis=2
collector.receiver.grpc.stat.connection_idle_timeout_millis=2
collector.receiver.grpc.stat.concurrent-calls_per-connection_max=2
collector.receiver.grpc.stat.handshake_timeout_millis=2
collector.receiver.grpc.stat.flow-control_window_size_init=2MB
collector.receiver.grpc.stat.header_list_size_max=2KB
collector.receiver.grpc.stat.inbound_message_size_max=2MB
collector.receiver.grpc.stat.receive_buffer_size=2MB

# Span
collector.receiver.grpc.span.enable=false
collector.receiver.grpc.span.bindaddress.ip=3.3.3.3
collector.receiver.grpc.span.bindaddress.port=3
# Executor of Server
collector.receiver.grpc.span.server.executor.thread_size=3
collector.receiver.grpc.span.server.executor.queue_size=3
collector.receiver.grpc.span.server.executor.monitor_enable=false
# Executor of Worker
collector.receiver.grpc.span.worker.executor.thread_size=3
collector.receiver.grpc.span.worker.executor.queue_size=3
collector.receiver.grpc.span.worker.executor.monitor_enable=false
# Stream scheduler for rejected execution
collector.receiver.grpc.span.stream.scheduler_thread_size=3
collector.receiver.grpc.span.stream.scheduler_period_millis=3
collector.receiver.grpc.span.stream.call_init_request_count=3

# Server Option
collector.receiver.grpc.span.keepalive_time_millis=3
collector.receiver.grpc.span.keepalive_timeout_millis=3
collector.receiver.grpc.span.permit_keepalive_time_millis=3
collector.receiver.grpc.span.connection_idle_timeout_millis=3
collector.receiver.grpc.span.concurrent-calls_per-connection_max=3
collector.receiver.grpc.span.handshake_timeout_millis=3
collector.receiver.grpc.span.flow-control_window_size_init=3MB
collector.receiver.grpc.span.header_list_size_max=3KB
collector.receiver.grpc.span.inbound_message_size_max=3MB
collector.receiver.grpc.span.receive_buffer_size=3MB


### For ssl config
collector.receiver.grpc.ssl.enable=true
# please choose openssl/jdk
collector.receiver.grpc.ssl.provider_type=jdk
# please insert .pem file path
collector.receiver.grpc.ssl.key_file_path=certs/server0.pem
# please insert .crt file path
collector.receiver.grpc.ssl.key_cert_file_path=certs/server0.key

# Agent
collector.receiver.grpc.agent.ssl.enable=true
collector.receiver.grpc.agent.ssl.bindaddress.ip=1.1.1.1
collector.receiver.grpc.agent.ssl.bindaddress.port=19441

# Stat
collector.receiver.grpc.stat.ssl.enable=false
collector.receiver.grpc.stat.ssl.bindaddress.ip=2.2.2.2
collector.receiver.grpc.stat.ssl.bindaddress.port=29442

# Span
collector.receiver.grpc.span.ssl.enable=true
collector.receiver.grpc.span.ssl.bindaddress.ip=3.3.3.3
collector.receiver.grpc.span.ssl.bindaddress.port=39443