<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean class="com.navercorp.pinpoint.collector.config.ScatterProperties"/>

    <!-- Manager-related Beans -->
    <!--    <bean id="jmxCollectorManager" class="com.navercorp.pinpoint.collector.manage.jmx.JMXCollectorManager">-->
    <!--    </bean>-->

    <!--    <bean id="jmxCollectorManagerList" class="com.navercorp.pinpoint.collector.manage.jmx.JMXCollectorManagerList">-->
    <!--    </bean>-->

    <bean id="handlerManager" class="com.navercorp.pinpoint.collector.manage.HandlerManager">
    </bean>


    <bean id="channelPropertiesFactory" class="com.navercorp.pinpoint.rpc.server.ChannelPropertiesFactory">
        <constructor-arg value="${collector.receiver.channel.properties.key:#{null}}"/>
    </bean>


    <bean id="agentEventWorker" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="#{collectorProperties.agentEventWorkerThreadSize}"/>
        <property name="maxPoolSize" value="#{collectorProperties.agentEventWorkerThreadSize}"/>
        <property name="queueCapacity" value="#{collectorProperties.agentEventWorkerQueueSize}"/>
        <property name="threadNamePrefix" value="Pinpoint-AgentEvent-Worker-"/>
        <property name="daemon" value="true"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="awaitTerminationSeconds" value="10"/>
        <property name="prestartAllCoreThreads" value="true"/>
    </bean>

    <bean id="agentLifeCycleChangeEventHandler"
          class="com.navercorp.pinpoint.collector.receiver.AgentLifeCycleChangeEventHandler"/>

    <util:list id="channelStateChangeEventHandlers"
               value-type="com.navercorp.pinpoint.rpc.server.handler.ServerStateChangeEventHandler">
        <ref bean="agentLifeCycleChangeEventHandler"/>
    </util:list>

    <bean id="addressFilter" class="com.navercorp.pinpoint.common.server.util.IgnoreAddressFilter">
        <constructor-arg value="#{collectorProperties.l4IpList}"/>
    </bean>


    <bean id="agentEventAsyncTask" class="com.navercorp.pinpoint.collector.service.async.AgentEventAsyncTaskService"/>
    <bean id="agentLifeCycleAsyncTask"
          class="com.navercorp.pinpoint.collector.service.async.AgentLifeCycleAsyncTaskService"/>

    <bean id="abortPolicy" class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
    <!--    <bean id="discardPolicy" class="java.util.concurrent.ThreadPoolExecutor.DiscardPolicy"/>-->
    <bean id="abstractReceiverExecutorFactoryBean"
          class="com.navercorp.pinpoint.collector.receiver.ExecutorFactoryBean" abstract="true">
        <property name="rejectedExecutionHandler" ref="abortPolicy"/>
        <property name="daemon" value="true"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
        <property name="awaitTerminationSeconds" value="10"/>
        <property name="preStartAllCoreThreads" value="true"/>
        <property name="logRate" value="100"/>
    </bean>

    <bean id="timeSlot" class="com.navercorp.pinpoint.common.server.util.DefaultTimeSlot">
    </bean>

    <bean id="sequenceSpanEventFilter" class="com.navercorp.pinpoint.common.server.bo.filter.SequenceSpanEventFilter">
        <constructor-arg index="0" value="${collector.spanEvent.sequence.limit:5000}"/>
    </bean>

</beans>