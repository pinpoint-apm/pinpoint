# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish package to the Maven Central Repository

on:
  release:
    types: [ created ]

jobs:
  publish:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 7
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '7'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Set JAVA_HOME
      run: |
        echo "JAVA_7_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "JAVA_8_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV
        echo "JAVA_11_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
        echo "JAVA_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV
    - name: Java Environment
      run: env | grep '^JAVA'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    - name: Cache node install
      uses: actions/cache@v2
      with:
        path: 'node_install'
        key: ${{ runner.os }}-node_install-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-node_install-
    - name: Publish package
      run: ./mvnw --batch-mode -Pcode.coverage deploy --file pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
